Certainly! Here's a C# class that demonstrates how to draw a simple tree structure using graphics. I'll keep the explanation basic so that it's easy to understand for someone who's new to programming.

First, I'll create a class called `SimpleTreeDrawer`:

```csharp
using System;
using System.Windows;
using System.Windows.Media;

public class SimpleTreeDrawer
{
    private Pen trunkPen;
    private Brush leafBrush;
    private double trunkWidth;
    private double treeHeight;

    public SimpleTreeDrawer()
    {
        // Set up the appearance of the trunk using a pen
        trunkPen = new Pen(Brushes.SaddleBrown, 10);
        trunkPen.Freeze();  // Improve performance by freezing the pen, as it won't change.

        // Set up the brush to paint the leaves
        leafBrush = Brushes.ForestGreen;
        leafBrush.Freeze();  // Improve performance by freezing the brush too.

        // Define the size of the tree components
        trunkWidth = 20;
        treeHeight = 150;
    }

    public void Draw(DrawingContext drawingContext)
    {
        if (drawingContext == null)
            throw new ArgumentNullException(nameof(drawingContext));

        // Calculate positions for the trunk and tree foliage
        Point treeBase = new Point(200, 300); // The bottom center of the tree trunk
        Point treeTop = new Point(treeBase.X, treeBase.Y - treeHeight); // The top center of the tree trunk

        // Draw the trunk of the tree
        drawingContext.DrawLine(trunkPen, treeBase, treeTop);

        // Draw the foliage using a simple ellipse (to keep things easy for beginners)
        double foliageWidth = treeHeight * 0.8;
        double foliageHeight = treeHeight * 0.5;
        Point foliageCenter = new Point(treeTop.X, treeTop.Y + foliageHeight * 0.2);
        Rect foliageEllipse = new Rect(foliageCenter.X - foliageWidth / 2, foliageCenter.Y - foliageHeight / 2, foliageWidth, foliageHeight);

        // Draw the foliage
        drawingContext.DrawEllipse(leafBrush, null, foliageCenter, foliageWidth / 2, foliageHeight / 2);
    }
}
```

Let me explain a bit about what's happening in the code above:

1. We created a `SimpleTreeDrawer` class with a constructor and a `Draw` method.
2. Inside the constructor, we set up the appearance of our tree. We define the colors and sizes for the trunk and leaves.
3. The `Draw` function is where the magic happens! It takes a `DrawingContext` object, which is provided by WPF and gives us a canvas to draw on. We draw a simple tree with a trunk and foliage (represented by an ellipse for simplicity).
4. We calculate the positions for the trunk and foliage, then we draw them using the `DrawLine` and `DrawEllipse` methods.

When this code is compiled and executed within the WPF framework that provides a valid `DrawingContext`, it will render a simple tree graphic on the screen. This is just one example of creating graphics using C#. As beginners progress, they can learn to add more complex elements such as branches, leaves, and maybe even some fun little creatures living in the tree!