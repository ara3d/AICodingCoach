Certainly! To demonstrate lists in C#, we'll create a simple example that uses a list to hold different colored rectangles and then draws those rectangles onto the screen. The `List<T>` class in C# is a generic collection that is part of the `System.Collections.Generic` namespace and it is widely used for holding a collection of objects.

Below is a C# code sample for a class that will create a list of rectangles, each a different color, and then draw them on the screen using the provided `DrawingContext`.

```csharp
using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Media;

public class RectangleListDrawer
{
    private List<ColoredRectangle> _rectangles;

    public RectangleListDrawer()
    {
        // Initialize the list of colored rectangles
        _rectangles = new List<ColoredRectangle>
        {
            // Add some rectangles with different colors and positions
            new ColoredRectangle(Brushes.Red, new Rect(10, 10, 50, 50)),
            new ColoredRectangle(Brushes.Green, new Rect(70, 10, 50, 50)),
            new ColoredRectangle(Brushes.Blue, new Rect(130, 10, 50, 50)),
            new ColoredRectangle(Brushes.Orange, new Rect(190, 10, 50, 50)),
            new ColoredRectangle(Brushes.Purple, new Rect(250, 10, 50, 50))
        };
    }

    public void Draw(DrawingContext context)
    {
        // Draw each rectangle in the list
        foreach (var coloredRect in _rectangles)
        {
            // Use DrawingContext to draw the rectangle with its specified color
            context.DrawRectangle(coloredRect.Brush, null, coloredRect.Rect);
        }
    }

    // Helper class to store rectangle properties
    private class ColoredRectangle
    {
        public Brush Brush { get; }
        public Rect Rect { get; }

        public ColoredRectangle(Brush brush, Rect rect)
        {
            Brush = brush;
            Rect = rect;
        }
    }
}
```

In the code above, we're creating a private class called `ColoredRectangle` that holds a `Brush` for the fill color and a `Rect` for the size and position of the rectangle. Our `RectangleListDrawer` class has a constructor that initializes a list with several `ColoredRectangle` instances, each with a different color and position.

In the `Draw` method, we loop through this list and draw each rectangle on the screen using its specific color and size. This allows you to see how lists can be practical for managing collections of objects and easily iterating over them to perform common operations, such as rendering graphics in this case.

Lists in C# are very powerful and can be used to hold any type of objects, providing a wide array of methods to perform operations like adding, removing, finding, and sorting items. This code demonstrates the fundamental idea of storing and using a collection of objects.