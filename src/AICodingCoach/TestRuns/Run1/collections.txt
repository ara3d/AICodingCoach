Certainly! We'll create a simple C# class that uses a `List` collection to store different colored rectangles and displays them on screen. This will help you understand how collections can store multiple items and how you can iterate over these items to perform actions such as drawing.

Below is a code example that demonstrates collections with a visual representation:

```csharp
using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Media;

// Define a class to hold rectangle information
public class ColoredRectangle
{
    public Color Color { get; set; }
    public Rect Bounds { get; set; }

    public ColoredRectangle(Color color, Rect bounds)
    {
        Color = color;
        Bounds = bounds;
    }
}

public class RectangleCollectionDrawer
{
    // We use a list to hold multiple rectangle configurations
    private List<ColoredRectangle> rectangles;

    // The parameterless constructor initializes the collection
    public RectangleCollectionDrawer()
    {
        // Initialize the list with a few colored rectangles
        rectangles = new List<ColoredRectangle>
        {
            new ColoredRectangle(Colors.Red, new Rect(10, 10, 50, 50)),
            new ColoredRectangle(Colors.Blue, new Rect(70, 10, 50, 50)),
            new ColoredRectangle(Colors.Green, new Rect(130, 10, 50, 50)),
            new ColoredRectangle(Colors.Yellow, new Rect(190, 10, 50, 50)),
        };
    }

    // The Draw method will be called with a valid DrawingContext
    public void Draw(DrawingContext context)
    {
        // We draw each rectangle from the list onto the context
        foreach (var coloredRect in rectangles)
        {
            // Create a SolidColorBrush from the Color of the rectangle
            SolidColorBrush brush = new SolidColorBrush(coloredRect.Color);
            // Use the FillRectangle method to draw each one
            context.DrawRectangle(brush, null, coloredRect.Bounds);
        }
    }
}
```

Explanation:

- We define a class `ColoredRectangle` that represents a rectangle with a color and bounds (position and size).
- We define a class `RectangleCollectionDrawer` with a `List<ColoredRectangle>` to store multiple rectangle configurations.
- Inside the constructor, we initialize the list with `ColoredRectangle` objects.
- In the `Draw` method, we use a `foreach` loop to iterate over the `rectangles` list and draw each rectangle using the `DrawingContext`.

When this code runs, it will produce a window displaying a red, blue, green, and yellow rectangle laid out horizontally. This visual example helps newcomers understand how to use collections to store and manipulate groups of objects in C#.