Certainly! In programming, variables are like containers that store data which can be used and changed within a program. Here's a simple C# example that uses variables to create a visual representation of storing and changing a color value with a rectangle. We'll define variables for the color components and then use them to fill a rectangle that is drawn on the screen:

```csharp
using System.Windows;
using System.Windows.Media;

public class ColorBoxDrawer
{
    // Declare variables to hold the color components
    private byte red;
    private byte green;
    private byte blue;
    private SolidColorBrush brush;

    public ColorBoxDrawer()
    {
        // Initialize variables with example values
        red = 255;   // Max red
        green = 0;   // No green
        blue = 150;  // Some blue

        // Create a SolidColorBrush with the initial color
        brush = new SolidColorBrush(Color.FromArgb(255, red, green, blue));
    }

    public void Draw(DrawingContext drawingContext)
    {
        // Use the variables to set the brush color
        brush.Color = Color.FromArgb(255, red, green, blue);

        // Draw a rectangle using the brush
        Rect rect = new Rect(50, 50, 100, 100); // x, y, width, height
        drawingContext.DrawRectangle(brush, null, rect);

        // Now, let's change the color by modifying the variables
        red = 0;
        green = 255;
        blue = 0;

        // Create a new SolidColorBrush to showcase the changed color
        brush = new SolidColorBrush(Color.FromArgb(255, red, green, blue));

        // Draw another rectangle with the new color to the right of the first one
        Rect rect2 = new Rect(200, 50, 100, 100); // x, y, width, height
        drawingContext.DrawRectangle(brush, null, rect2);
    }
}
```

Explanation:
- We define three `byte` variables for color components: `red`, `green`, and `blue`.
- In the constructor `ColorBoxDrawer`, we initialize these variables with values to represent a color.
- `Draw` method uses these variables to create a `SolidColorBrush` and draw a rectangle with that color.
- We then modify the variables to represent a different color and draw another rectangle with the new color.

When this code runs:
- You'll see two rectangles. The first rectangle is drawn with the initial color values (pinkish).
- After changing the variables, the second rectangle appears with the new color values (green).