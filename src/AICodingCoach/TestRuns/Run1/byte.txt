Byte in C# is a data type used to store an integer value ranging from 0 to 255. To provide a visual example, let's create a simple C# class that demonstrates various byte values as colors in a gradient. Each color on a computer display can be represented using a byte for its red, green, and blue (RGB) channels, whereby a `byte` value of 0 is no intensity and 255 is full intensity.

Here's an illustrative class that creates a gradient of colors, using bytes to represent the intensity of a single color (red).

```csharp
using System.Windows;
using System.Windows.Media;

public class ByteVisualization
{
    public ByteVisualization() {}
    
    // This function will draw a gradient demonstrating byte values.
    // Each column represents a byte value from 0 to 255, which translates to the red color intensity.
    public void Draw(DrawingContext drawingContext)
    {
        // Define the width of each band in the gradient.
        double bandWidth = 2;
        // Calculate the total width to fit 256 colors.
        double totalWidth = 256 * bandWidth;

        // Iterate through all byte values from 0 to 255.
        for (byte i = 0; i < 256; i++)
        {
            // Create a brush from the current byte value only affecting the red channel.
            SolidColorBrush brush = new SolidColorBrush(Color.FromRgb(i, 0, 0));

            // Calculate the X position where to draw the band.
            double x = i * bandWidth;
            
            // Draw a rectangle filled with the current color.
            drawingContext.DrawRectangle(
                brush,
                null, // no pen needed, as we don't want to draw a border
                new Rect(x, 0, bandWidth, 100)); // drawing band with a fixed height
        }
    }
}
```

When you run this code in a WPF application, the `Draw` method will create a horizontal gradient bar, showing all the shades of red controlled by the byte value. The gradient starts with black on the left (0 intensity) and gradually turns to bright red on the right (full intensity).

For newcomers: Remember, `byte` is simply a way to store small numbers efficiently, and in this example, each number defines the red component of a color. The `DrawingContext` is an object used in WPF applications to render shapes, text, and images to a display or a window.