Here's a simple C# class that demonstrates the concept of strings by drawing them visually. In this example, we will display the word "Hello!" on the screen in a colorful way to make it fun and interesting.

```csharp
using System;
using System.Windows;
using System.Windows.Media;

public class StringVisualizer
{
    public StringVisualizer()
    {
        // Constructor - this is where we can initialize our class if needed.
    }

    public void Draw(DrawingContext context)
    {
        // We create a string variable containing the word we want to display.
        string message = "Hello!";

        // We choose a font, size, and create a Typeface from it.
        Typeface typeface = new Typeface(new FontFamily("Arial"), FontStyles.Normal, FontWeights.Bold, FontStretches.Normal);

        // We create a formatted text object to display our string with given typeface and size.
        FormattedText formattedText = new FormattedText(
            message,
            System.Globalization.CultureInfo.CurrentCulture,
            FlowDirection.LeftToRight,
            typeface,
            48, // Font size
            Brushes.Black // Text color
        );

        // We set a point where we want to start drawing our text.
        Point textLocation = new Point(70, 100);

        // Finally, we use the provided DrawingContext to draw our formatted text at the specified location.
        context.DrawText(formattedText, textLocation);

        // We can also visualize each character in a different color to make it more fun.
        for (int i = 0; i < message.Length; i++)
        {
            // We create a new formatted text for each character with a unique color.
            FormattedText letterText = new FormattedText(
                message[i].ToString(),
                System.Globalization.CultureInfo.CurrentCulture,
                FlowDirection.LeftToRight,
                typeface,
                48, // Font size
                new SolidColorBrush(Color.FromArgb(255, (byte)(50 + i * 40), (byte)(100 + i * 30), 200)) // Unique color for each character
            );

            // We adjust the location slightly for each character to avoid overlap.
            Point letterLocation = new Point(textLocation.X + i * 40, textLocation.Y);

            // Draw each character with the different color.
            context.DrawText(letterText, letterLocation);
        }
    }
}
```

This class introduces a newcomer to the concept of strings in a graphical way. Here's a brief explanation of what's happening:

1. We've defined our `StringVisualizer` class with a parameterless constructor.
2. The `Draw` method takes a `DrawingContext` object as an argument, which gives us the ability to draw on the screen.
3. Inside the `Draw` method, we create a string variable to represent the text we want to display.
4. For styling our text, we create a `Typeface` with a specific font family, style, weight, and stretch.
5. `FormattedText` helps us create visual representations of our string with the specified styling.
6. We then determine where on the screen the text will be drawn.
7. `context.DrawText` actually draws our formatted text on the screen.
8. Lastly, we loop through each character in our string and draw them individually with different colors for visual appeal.

This example should engage a newcomer by blending a fundamental programming concept (strings) with the immediate visual feedback of seeing those strings on the screen in a colorful display.