Booleans in programming represent a logical entity that can have two states: true or false. In C#, the Boolean data type is represented by the keyword `bool`. Booleans are often used in conditions to control the flow of programs such as in if statements, loops, and also in evaluating expressions.

Let's create a C# class that demonstrates how Booleans can be used to draw two different shapes on the screen. Depending on the value of a Boolean variable, it will draw either a circle (for `true`) or a square (for `false`). The class will be named `BooleanShapesDrawer` and it will have a `Draw` method as you requested.

Please note that the following example uses WPF's `DrawingContext`, which is part of the .NET Framework:

```csharp
using System;
using System.Windows;
using System.Windows.Media;

public class BooleanShapesDrawer
{
    // Constructor not needed as we will not be initializing any data for this example
    
    public void Draw(DrawingContext drawingContext)
    {
        // A boolean to determine which shape to draw
        bool drawCircle = DateTime.Now.Second % 2 == 0; // Let's base it on whether the current second is even

        // Brush and Pen to draw shapes
        Brush shapeBrush = Brushes.SkyBlue;
        Pen shapePen = new Pen(Brushes.Black, 2);

        if (drawCircle)
        {
            // Draw a circle if 'drawCircle' is true
            drawingContext.DrawEllipse(shapeBrush, shapePen, new Point(150, 150), 100, 100);
        }
        else
        {
            // Draw a square if 'drawCircle' is false
            // Note that in WPF, drawing a rectangle also requires its top-left point and its width and height
            drawingContext.DrawRectangle(shapeBrush, shapePen, new Rect(100, 100, 200, 200));
        }
    }
}
```

When the `Draw` method is called, the `drawingContext` argument is used to draw the shapes on a canvas. The variable `drawCircle` has a dynamically assigned value and determines the shape to draw based on whether the current second at the time of execution is even or odd. This simple example illustrates how a Boolean can alter the flow of a program.

This code can be compiled and executed within a WPF application that provides the `DrawingContext`. When executed, the `Draw` method will either draw a circle or a square depending on the value of the Boolean `drawCircle`.