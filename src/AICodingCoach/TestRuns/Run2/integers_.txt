Integers are the set of whole numbers that can be positive, negative, or zero, but not fractions or decimals. In programming, they're a fundamental data type used to represent these values.

In C#, the `int` is a common integer type which is a 32-bit signed integer. There are other integer types as well such as `short`, `long`, `byte`, etc., which have different sizes and signed/unsigned variants.

Here's a fun example that uses integers to draw a staircase pattern on the screen. This example demonstrates how you can use the `DrawingContext` to create simple graphics using integers for positioning and sizing.

```csharp
using System.Windows;
using System.Windows.Media;

public class IntegerStaircaseDrawer
{
    // Function to draw the graphics
    public void Draw(DrawingContext drawingContext)
    {
        if (drawingContext == null)
            throw new ArgumentNullException(nameof(drawingContext));

        // Define the size of each stair step
        int stepWidth = 20;
        int stepHeight = 10;

        // Define the number of steps in the staircase
        int numberOfSteps = 10;

        // Start position for drawing the staircase
        int startX = 10;
        int startY = 100;

        // Create a semi-transparent brush for drawing
        SolidColorBrush stairBrush = new SolidColorBrush(Color.FromArgb(128, 0, 123, 255));
        
        // Draw the staircase
        for (int i = 0; i < numberOfSteps; ++i)
        {
            // Compute the position for the current step
            int x = startX + i * stepWidth;
            int y = startY - i * stepHeight;

            // Create a rectangle representing the step
            Rect stepRect = new Rect(x, y, stepWidth, stepHeight);

            // Draw the step
            drawingContext.DrawRectangle(stairBrush, null, stepRect);
        }
    }
}
```

When you run this code, it should display a staircase pattern where each "stair" is represented by a rectangle, and each rectangle is drawn using integer values for its location and size. The semi-transparent brush allows you to see how the stairs overlap each other.